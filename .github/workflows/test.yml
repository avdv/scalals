name: "Test"
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  release:
    types: [published]

jobs:
  graalvm:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, macos-14]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Cache SBT
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/coursier
          ~/.ivy2/cache
          ~/.ivy2/local
          ~/.sbt/boot
          ~/.sbt/launchers
        key: ${{ runner.os }}-sbt-${{ hashFiles('build.sbt', 'project/plugins.sbt') }}
    - name: "Install Nix ❄"
      uses: cachix/install-nix-action@v26
      with:
          extra_nix_config: |
            experimental-features = nix-command flakes
    - name: "Install Cachix ❄"
      uses: cachix/cachix-action@v14
      with:
        name: cbley
        extraPullNames: pre-commit-hooks
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
        pushFilter: '[-](source|nixpkgs-src)$'
    - run: git branch PR-${{ github.event.number }}
    - run: nix develop '.#graalVM' --command sbt 'scalalsJVM / GraalVMNativeImage / packageBin'
    - run: jvm/target/graalvm-native-image/scalals

  package:
    name: Nix ❄
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: "Install Nix ❄"
      uses: cachix/install-nix-action@v26
    - name: "Install Cachix ❄"
      uses: cachix/cachix-action@v14
      with:
        name: cbley
        extraPullNames: pre-commit-hooks
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
        pushFilter: '[-](source|nixpkgs-src)$'
    - run: git branch PR-${{ github.event.number }}
    - run: nix flake check
    - run: nix build --print-build-logs
    - run: nix run

  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Cache SBT
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/coursier
          ~/.ivy2/cache
          ~/.ivy2/local
          ~/.sbt/boot
          ~/.sbt/launchers
        key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt', '.travis.yml') }}
    - name: "Install Nix ❄"
      uses: cachix/install-nix-action@v26
      with:
          #install_url: https://nixos-nix-install-tests.cachix.org/serve/i6laym9jw3wg9mw6ncyrk6gjx4l34vvx/install
          #install_options: '--tarball-url-prefix https://nixos-nix-install-tests.cachix.org/serve'
          extra_nix_config: |
            experimental-features = nix-command flakes
    - name: "Install Cachix ❄"
      uses: cachix/cachix-action@v14
      with:
        name: cbley
        extraPullNames: pre-commit-hooks
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
        pushFilter: '[-](source|nixpkgs-src)$'
        # Only needed for private caches
        #authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - run: git branch PR-${{ github.event.number }}
    - name: Test
      run: nix develop --ignore-environment --keep HOME --command sbt tpolecatCiMode 'scalalsNative / test'
    - name: Cross Compile
      run: nix develop --ignore-environment --keep HOME --command '.github/crosscompile'
    - name: qemu-aarch64 scalals
      run: nix shell 'nixpkgs#qemu' --command qemu-aarch64 scalals-out-linux-aarch64
    - uses: actions/upload-artifact@v4
      with:
        path: scalals-*

  run:
    name: Run
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-14
    needs:
      - tests
    runs-on:
      ${{ matrix.os }}
    steps:
      - uses: actions/download-artifact@v4
        id: download
      - run: |
          ls -lh
          chmod +x scalals-*
          ./scalals-*-$( echo "${RUNNER_OS}" | tr A-Z a-z )-x86_64
        working-directory: ${{steps.download.outputs.download-path}}/artifact
      - run: |
          ./scalals-*-$( echo "${RUNNER_OS}" | tr A-Z a-z )-aarch64
        if: ${{ runner.arch == 'ARM64' }}
        working-directory: ${{steps.download.outputs.download-path}}/artifact

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs:
      - run
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
      - run: |
          mv scalals-Linux-aarch64/scalals scalals-arm64-linux
          mv scalals-Linux-X64/scalals scalals-x86_64-linux
          mv scalals-macOS-ARM64 scalals-arm64-darwin
          mv scalals-macOS-X64/scalals scalals-x86_64-darwin
      - name: Upload binaries
        uses: softprops/action-gh-release@v2
        with:
          fail_on_unmatched_files: true
          files: |
            scalals-arm64-linux
            scalals-arm64-darwin
            scalals-x86_64-linux
            scalals-x86_64-darwin
