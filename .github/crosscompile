#!/usr/bin/env bash

set -euo pipefail

declare -ar TARGETS=(
    x86_64-unknown-linux-musl
    x86_64-apple-darwin-none
    aarch64-unknown-linux-musl
    aarch64-apple-darwin-none
)

echo '::group::configure'
sbt -client 'project scalalsNative'
echo '::endgroup::'

# Mode: {debug, release-fast, release-full, release-size}

declare -a binaries

for target in "${TARGETS[@]}"; do
    # LTO: {none, full, thin}
    case "$target" in
        # zig ld does not yet support LTO for mach-O see https://github.com/ziglang/zig/issues/8680
        *macos*) LTO=none ;;
        *)       LTO=full ;;
    esac

    echo "::group::build $target"

    sbt -client "set nativeConfig ~= { _.withLTO(scala.scalanative.build.LTO.$LTO) }"
    sbt -client "set targetTriplet:= Some(\"$target\")"
    sbt -client "ninja"
    sbt -client "ninjaCompile"

    ninja -f native/target/build.ninja

    binaries+=( "$( ninja -f native/target/build.ninja -t targets rule exe )" )

    echo '::endgroup::'
done

mv -vt . "${binaries[@]}"

